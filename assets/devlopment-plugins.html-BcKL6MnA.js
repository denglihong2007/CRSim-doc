import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c,e as l,b as r,a as i,w as s,d as t,r as h,o as k}from"./app-DgDw3LkK.js";const g={};function u(m,e){const d=h("Tabs"),o=h("RouteLink");return k(),c("div",null,[e[7]||(e[7]=l('<h2 id="开发环境" tabindex="-1"><a class="header-anchor" href="#开发环境"><span>开发环境</span></a></h2><p><strong>首先确保您的系统满足以下要求：</strong></p><ul><li>Windows 10 20H1 及以上的操作系统，x86_64 架构</li></ul><p>要在本地进行开发，<strong>您需要安装以下负载和工具</strong>：</p><ul><li><a href="https://dotnet.microsoft.com/zh-cn/download/dotnet/9.0" target="_blank" rel="noopener noreferrer">.NET 9.0 SDK</a></li><li><a href="https://visualstudio.microsoft.com/" target="_blank" rel="noopener noreferrer">Visual Studio 2022</a>，包括 <code>.NET 桌面开发</code> 和 <code>WinUI 应用程序开发</code> 工作负载</li><li><a href="https://git-scm.com/" target="_blank" rel="noopener noreferrer">Git</a></li></ul><h2 id="添加-crsim-仓库-nuget-包源" tabindex="-1"><a class="header-anchor" href="#添加-crsim-仓库-nuget-包源"><span>添加 CRSim 仓库 NuGet 包源</span></a></h2><p>CRSim 的核心库（如 <code>CRSim.Core</code>）通过 GitHub Packages 分发，因此您需要配置 NuGet 包源以从 GitHub 拉取依赖。</p><h3 id="获取-github-token" tabindex="-1"><a class="header-anchor" href="#获取-github-token"><span>获取 GitHub Token</span></a></h3><p>要访问 GitHub 私有或授权包源，您需要在 <a href="https://github.com/settings/tokens" target="_blank" rel="noopener noreferrer">Github 用户设置</a>中设置一个 GitHub 的 <strong>Personal Access Token (PAT)</strong>。推荐设置权限为：</p><ul><li><p><code>read:packages</code></p></li><li><p><code>repo</code>（如需访问私有仓库）</p></li></ul><h3 id="添加全局包源" tabindex="-1"><a class="header-anchor" href="#添加全局包源"><span>添加全局包源</span></a></h3><p>您只需运行以下命令一次：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">dotnet</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nuget</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> source</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --username</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> YOUR_GITHUB_USERNAME</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --password</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> YOUR_GITHUB_TOKEN</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --store-password-in-clear-text</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> crsim-github</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;https://nuget.pkg.github.com/denglihong2007/index.json&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>请将 <code>YOUR_GITHUB_USERNAME</code> 替换为您的 GitHub 用户名，<code>YOUR_GITHUB_TOKEN</code> 替换为您上一步生成的访问令牌。</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>命令中的 <code>--store-password-in-clear-text</code> 表示将 token 以明文形式存储在本地配置文件中，仅建议在受信环境使用。</p></div><p>添加后，可在<code>%AppData%\\NuGet\\NuGet.Config</code>位置查看并编辑。</p><p>添加成功后，您就可以在项目中引用 CRSim 的 NuGet 包了。</p><h2 id="克隆并构建-crsim" tabindex="-1"><a class="header-anchor" href="#克隆并构建-crsim"><span>克隆并构建 CRSim</span></a></h2><p>开发插件的过程中需要使用 CRSim 源码以构建 CRSim 本体的可执行文件，以用于运行和调试插件。</p><div class="hint-container note"><p class="hint-container-title">为什么不使用 Releases 中发布的可执行文件</p><p>Release 版本的构建无法使用热重载（包括 XAML 热重载）功能，调试起来很麻烦。</p></div><p>以下是克隆仓库的命令行：</p>',21)),r(d,{id:"92",data:[{id:"Github"},{id:"镜像站"}],"tab-id":"clonemethod"},{title0:s(({value:a,isActive:n})=>e[0]||(e[0]=[t("Github")])),title1:s(({value:a,isActive:n})=>e[1]||(e[1]=[t("镜像站")])),tab0:s(({value:a,isActive:n})=>e[2]||(e[2]=[i("div",{class:"language-shell line-numbers-mode","data-highlighter":"shiki","data-ext":"shell",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"git"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," clone"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," https://github.com/denglihong2007/CRSim.git")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"})])],-1)])),tab1:s(({value:a,isActive:n})=>e[3]||(e[3]=[i("div",{class:"language-shell line-numbers-mode","data-highlighter":"shiki","data-ext":"shell",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"git"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," clone"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," https://crsim.com.cn/CRSim.git")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"})])],-1)])),_:1}),e[8]||(e[8]=l(`<p>克隆完成后，运行以下命令进入 CRSim 源代码目录。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CRSim</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>克隆仓库后，默认处于 master 分支上，对应 CRSim 的稳定版本。建议在稳定版本的基础上开发插件，以获得较好的兼容性。如果您想签出到特定版本上，请使用对应版本的标签名（如 <code>v2.3.0.0</code>）。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 如果要签出到某个版本上，请使用标签名：</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> checkout</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v2.3.0.0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>然后在 <strong>Developer PowerShell for Visual Studio 2022</strong> 运行以下脚本：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">./tools/plugin/build.ps1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>打开 <code>Windows Terminal</code> 应用程序，点击标签中的【+】即可找到 <code>Developer PowerShell for Visual Studio 2022</code>。</p></div><div class="hint-container warning"><p class="hint-container-title">提醒</p><p>运行此脚本后，请重启 Visual Studio 等开发工具，以更新相关环境变量。</p></div><p>这个脚本会自动清理上次的构建，进行构建并设置相关的环境变量。这样就获得了 CRSim 的 Debug 构建。构建默认输出在 <code>（项目文件夹\\CRSim\\bin\\Debug\\net9.0-windows10.0.19041.0）</code>下。</p><h2 id="更新" tabindex="-1"><a class="header-anchor" href="#更新"><span>更新</span></a></h2><p>如果 CRSim 发布了新版本，您就需要需要更新 CRSim 仓库。要更新仓库，请先拉取，然后重新进行构建。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pull</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">./tools/plugin/build.ps1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="开始开发插件" tabindex="-1"><a class="header-anchor" href="#开始开发插件"><span>开始开发插件</span></a></h2>`,13)),i("p",null,[e[5]||(e[5]=t("一切准备工作就绪后，继续阅读文章")),r(o,{to:"/dev/create-project.html"},{default:s(()=>e[4]||(e[4]=[t("开始编写插件")])),_:1}),e[6]||(e[6]=t("，开始您的插件开发之旅吧！"))])])}const A=p(g,[["render",u]]),F=JSON.parse('{"path":"/dev/devlopment-plugins.html","title":"配置 CRSim 插件开发环境","lang":"zh-CN","frontmatter":{"title":"配置 CRSim 插件开发环境","icon":"toolbox","index":false,"description":"开发环境 首先确保您的系统满足以下要求： Windows 10 20H1 及以上的操作系统，x86_64 架构 要在本地进行开发，您需要安装以下负载和工具： .NET 9.0 SDK Visual Studio 2022，包括 .NET 桌面开发 和 WinUI 应用程序开发 工作负载 Git 添加 CRSim 仓库 NuGet 包源 CRSim 的核...","head":[["meta",{"property":"og:url","content":"https://docs.crsim.tech/dev/devlopment-plugins.html"}],["meta",{"property":"og:site_name","content":"CRSim 文档"}],["meta",{"property":"og:title","content":"配置 CRSim 插件开发环境"}],["meta",{"property":"og:description","content":"开发环境 首先确保您的系统满足以下要求： Windows 10 20H1 及以上的操作系统，x86_64 架构 要在本地进行开发，您需要安装以下负载和工具： .NET 9.0 SDK Visual Studio 2022，包括 .NET 桌面开发 和 WinUI 应用程序开发 工作负载 Git 添加 CRSim 仓库 NuGet 包源 CRSim 的核..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-07-26T17:54:50.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-26T17:54:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"配置 CRSim 插件开发环境\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-07-26T17:54:50.000Z\\",\\"author\\":[]}"]]},"git":{"createdTime":1753548656000,"updatedTime":1753552490000,"contributors":[{"name":"denglihong2007","username":"denglihong2007","email":"98096191+denglihong2007@users.noreply.github.com","commits":2,"url":"https://github.com/denglihong2007"}]},"readingTime":{"minutes":2.58,"words":774},"filePathRelative":"dev/devlopment-plugins.md","localizedDate":"2025年7月26日","autoDesc":true}');export{A as comp,F as data};
